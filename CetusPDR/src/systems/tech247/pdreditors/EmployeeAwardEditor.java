/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package systems.tech247.pdreditors;

import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.util.Date;
import javax.persistence.EntityManager;
import javax.persistence.Query;
import org.openide.awt.StatusDisplayer;
import org.openide.util.Lookup;
import org.openide.windows.TopComponent;
import org.openide.windows.WindowManager;
import systems.tech247.dbaccess.DataAccess;
import systems.tech247.hr.Awards;
import systems.tech247.hr.Employees;
import systems.tech247.pdr.Utility;


/**
 *
 * @author Admin
 */
public class EmployeeAwardEditor extends javax.swing.JPanel{

    
    
    DataAccess da = new DataAccess();
    Awards contact;
    Employees employeeID;
    
    
    //Updatables
    String school = null;
    Date fro = null;
    Date to = null;
    String awardType = null;
    String course = null;
    String comments = null;
    String award = null;
    String homephone = null;
    EntityManager entityManager = da.getEntityManager();
   
    
    
   
    /**
     * Creates new form PersonalInfoPanel
     */
    public EmployeeAwardEditor(Awards contact){
        this(contact.getEmployeeId(),contact);
    }
    
    public EmployeeAwardEditor(Employees emp){
        this(emp,null);
    }
    
    
 public EmployeeAwardEditor(Employees empID,Awards acc) {
        initComponents();
        //Start transaction
        contact = acc;
        
        if(acc != null){
            jtAwardType.setText(contact.getAType());
            
            jtAward.setText(contact.getAward());
            jtComment.setText(contact.getComments());
            jdcDate.setDate(contact.getCFrom());
            jtComment.setText(contact.getComments());
            
          
        }
        
        
       
        
        employeeID = empID;
        jtAwardType.addKeyListener(new KeyListener() {
            @Override
            public void keyTyped(KeyEvent e) {
                awardType = jtAwardType.getText();
                modify();
            }

            @Override
            public void keyPressed(KeyEvent e) {
                awardType = jtAwardType.getText();
                modify();
            }

            @Override
            public void keyReleased(KeyEvent e) {
                awardType = jtAwardType.getText();
                modify();
            }
        });
        
       jdcDate.addPropertyChangeListener(new PropertyChangeListener() {
            @Override
            public void propertyChange(PropertyChangeEvent evt) {
                if(evt.getSource()==jdcDate && "date" == evt.getPropertyName()){
                    fro = jdcDate.getDate();
                    modify();
                }
            }
        });
        
        
        
        jtAward.addKeyListener(new KeyListener() {
            @Override
            public void keyTyped(KeyEvent e) {
                award = jtAward.getText();
                modify();
            }

            @Override
            public void keyPressed(KeyEvent e) {
                award = jtAward.getText();
                modify();
            }

            @Override
            public void keyReleased(KeyEvent e) {
                award = jtAward.getText();
                modify();
            }
        });
        
        jtComment.addKeyListener(new KeyListener() {
            @Override
            public void keyTyped(KeyEvent e) {
                comments = jtComment.getText();
                modify();
            }

            @Override
            public void keyPressed(KeyEvent e) {
                comments = jtComment.getText();
                modify();
            }

            @Override
            public void keyReleased(KeyEvent e) {
                comments = jtComment.getText();
                modify();
            }
        });
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jtAwardType = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtComment = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jtAward = new javax.swing.JTextField();
        jdcDate = new com.toedter.calendar.JDateChooser();
        jLabel3 = new javax.swing.JLabel();
        jbSave = new javax.swing.JButton();

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(EmployeeAwardEditor.class, "EmployeeAwardEditor.jLabel1.text_1")); // NOI18N

        jtAwardType.setText(org.openide.util.NbBundle.getMessage(EmployeeAwardEditor.class, "EmployeeAwardEditor.jtAwardType.text")); // NOI18N

        jtComment.setColumns(20);
        jtComment.setRows(5);
        jScrollPane1.setViewportView(jtComment);

        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(EmployeeAwardEditor.class, "EmployeeAwardEditor.jLabel2.text_1")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel7, org.openide.util.NbBundle.getMessage(EmployeeAwardEditor.class, "EmployeeAwardEditor.jLabel7.text")); // NOI18N

        jtAward.setText(org.openide.util.NbBundle.getMessage(EmployeeAwardEditor.class, "EmployeeAwardEditor.jtAward.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel3, org.openide.util.NbBundle.getMessage(EmployeeAwardEditor.class, "EmployeeAwardEditor.jLabel3.text")); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 389, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(0, 335, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtAward, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jtAwardType)
                            .addComponent(jdcDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jtAwardType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jtAward, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jdcDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        org.openide.awt.Mnemonics.setLocalizedText(jbSave, org.openide.util.NbBundle.getMessage(EmployeeAwardEditor.class, "EmployeeAwardEditor.jbSave.text_1")); // NOI18N
        jbSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbSave, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbSave)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jbSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSaveActionPerformed
        entityManager.getTransaction().begin();    
        
        if(contact == null){ //Add New Referee
            
            
            
            String insertSQL = "INSERT INTO [dbo].[awards]\n" +
"           ([EmpCode]\n" +
"           ,[Code]\n" +
"           ,[Course]\n" +
"           ,[CFrom]\n" +
"           ,[CTo]\n" +
"           ,[ELevel]\n" +
"           ,[Award]\n" +
"           ,[Comments]\n" +
"           ,[CAward]\n" +
"           ,[AType]\n" +
"           ,[employee_id]\n" +
"           ,[CurrencyId])\n" +
"     VALUES\n" +
"           (?,?,?,?,?,?,?,?,?,?,?,?)";
            Query query = entityManager.createNativeQuery(insertSQL);
            query.setParameter(11, employeeID.getEmployeeID());
            query.setParameter(7, award);
            query.setParameter(10, awardType);
            query.setParameter(8, comments);
            query.setParameter(4, fro);
            query.setParameter(3, award);
            
            
           
                       
            query.executeUpdate();
            entityManager.getTransaction().commit(); 
            
            resetEditor();
            StatusDisplayer.getDefault().setStatusText("Award Added");
            
            Utility.loadAwards(employeeID);
            
        }else{
            
            Awards eba = entityManager.find(Awards.class, contact.getId());
            
            
            
            if(null != award){
                eba.setAward(award);
            }
            
            if(null != awardType){
                eba.setAType(awardType);
            }
            
            if(null != fro){
                eba.setCFrom(fro);
            }
           
            if(null != comments){
                eba.setComments(comments);
            }
            

            
            entityManager.getTransaction().commit();
            
            StatusDisplayer.getDefault().setStatusText("Award Saved");
            
            Utility.loadAwards(employeeID);
            resetEditor();
        }
        

    }//GEN-LAST:event_jbSaveActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbSave;
    private com.toedter.calendar.JDateChooser jdcDate;
    private javax.swing.JTextField jtAward;
    private javax.swing.JTextField jtAwardType;
    private javax.swing.JTextArea jtComment;
    // End of variables declaration//GEN-END:variables


    
    
    void modify(){
        
                jbSave.setEnabled(true);
            
        
    }

    
    public Lookup getLookup() {
        TopComponent tc = WindowManager.getDefault().findTopComponent("EmployeeEditorTopComponent");
        return tc.getLookup();
    }
    
    
    
    void resetEditor(){
        jtAwardType.setText("");
        jdcDate.setDate(null);
        jtComment.setText("");
        jtAward.setText("");
        jtComment.setText("");
        
        jtAward.setText("");
        to = null;
        comments = null;
        fro = null;
        award = null;
        school = null;
        award = null;
        homephone = null;
    }
    
    


}
