/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package systems.tech247.pdreditors;

import java.awt.Component;
import java.io.IOException;
import javax.persistence.EntityManager;
import org.netbeans.spi.actions.AbstractSavable;
import org.openide.util.Lookup;
import org.openide.util.LookupEvent;
import org.openide.util.LookupListener;
import org.openide.windows.TopComponent;
import org.openide.windows.WindowManager;
import systems.tech247.dbaccess.DataAccess;
import systems.tech247.hr.Employees;

import systems.tech247.hr.Nationalities;
import systems.tech247.hr.Tribes;
import systems.tech247.pdr.Utility;
import systems.tech247.util.Gender;

/**
 *
 * @author Admin
 */
public final class EmpDisengagementPanel extends javax.swing.JPanel implements LookupListener{

    Employees emp;
    DataAccess da = new DataAccess();
    Tribes tribeID;
    Boolean edit = false;
    Nationalities nationalityID;
    short genderID;
    EntityManager entityManager = DataAccess.getEntityManager();
    TopComponent empTc = WindowManager.getDefault().findTopComponent("EmployeesTopComponent");
    Lookup.Result<Employees> empRslt = empTc.getLookup().lookupResult(Employees.class);
    TopComponent nationTc = WindowManager.getDefault().findTopComponent("NationsTopComponent");
    Lookup.Result<Nationalities> nationRslt = nationTc.getLookup().lookupResult(Nationalities.class);
    TopComponent tribeTc = WindowManager.getDefault().findTopComponent("TribesTopComponent");
    Lookup.Result<Tribes> tribeRslt = tribeTc.getLookup().lookupResult(Tribes.class);
    TopComponent GenderTc = WindowManager.getDefault().findTopComponent("GenderTopComponent");
    Lookup.Result<Gender> genderRslt = tribeTc.getLookup().lookupResult(Gender.class);
    /**
     * Creates new form PersonalInfoPanel
     */
    public EmpDisengagementPanel() {
        initComponents();
        //Start transaction
        
        disableInput();
        empRslt.addLookupListener(this);
        resultChanged(new LookupEvent(empRslt));
        
        
        
        
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jDDisengagementDate = new com.toedter.calendar.JDateChooser();
        jcIsDisengaged = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTaDisengagement = new javax.swing.JTextArea();
        jcCanReengage = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        jtDisengagementRef = new javax.swing.JTextField();

        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(EmpDisengagementPanel.class, "EmpDisengagementPanel.jLabel2.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel3, org.openide.util.NbBundle.getMessage(EmpDisengagementPanel.class, "EmpDisengagementPanel.jLabel3.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jcIsDisengaged, org.openide.util.NbBundle.getMessage(EmpDisengagementPanel.class, "EmpDisengagementPanel.jcIsDisengaged.text")); // NOI18N

        jTaDisengagement.setColumns(20);
        jTaDisengagement.setRows(5);
        jScrollPane1.setViewportView(jTaDisengagement);

        org.openide.awt.Mnemonics.setLocalizedText(jcCanReengage, org.openide.util.NbBundle.getMessage(EmpDisengagementPanel.class, "EmpDisengagementPanel.jcCanReengage.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(EmpDisengagementPanel.class, "EmpDisengagementPanel.jLabel1.text")); // NOI18N

        jtDisengagementRef.setText(org.openide.util.NbBundle.getMessage(EmpDisengagementPanel.class, "EmpDisengagementPanel.jtDisengagementRef.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jcIsDisengaged, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jDDisengagementDate, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jtDisengagementRef, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jcCanReengage)
                            .addComponent(jLabel3))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jDDisengagementDate, jtDisengagementRef});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jcIsDisengaged)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2))
                    .addComponent(jDDisengagementDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jtDisengagementRef, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jcCanReengage)
                .addContainerGap(190, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser jDDisengagementDate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTaDisengagement;
    private javax.swing.JCheckBox jcCanReengage;
    private javax.swing.JCheckBox jcIsDisengaged;
    private javax.swing.JTextField jtDisengagementRef;
    // End of variables declaration//GEN-END:variables

    @Override
    public void resultChanged(LookupEvent le) {
        Lookup.Result result = (Lookup.Result)le.getSource();
        for (Object e: result.allInstances()){
            if(e instanceof Employees){
                
                emp = (Employees)e;
                
                disableInput();
                
                if(((Employees) e).getIsDisengaged()){
                    jDDisengagementDate.setDate(((Employees) e).getDateOfDisengagement());
                    jTaDisengagement.setText(((Employees) e).getDisEngagementReason());
                    jcIsDisengaged.setSelected(true);
                    jtDisengagementRef.setText(((Employees) e).getDisEngagementReferenceNumber());
                    jcCanReengage.setSelected(((Employees) e).getCanBeReEngaged());
                }else{
                    jDDisengagementDate.setDate(((Employees) e).getDateOfDisengagement());
                    jTaDisengagement.setText(((Employees) e).getDisEngagementReason());
                    jcIsDisengaged.setSelected(false);
                    jtDisengagementRef.setText(((Employees) e).getDisEngagementReferenceNumber());
                    
                }
                
                
            }
            
            
            
            if(e instanceof Nationalities){
                nationalityID = (Nationalities)e;
                
                modify();
            }
            
            if(e instanceof Gender){
                genderID = ((Gender) e).getCode();
                
                modify();
            }
        }
    }
    
    void modify(){
        if(getLookup().lookup(MySavable.class)==null){
            Utility.editorIC.add(new MySavable());
        }
    }

    
    public Lookup getLookup() {
        TopComponent tc = WindowManager.getDefault().findTopComponent("EmployeeEditorTopComponent");
        return tc.getLookup();
    }
    
    private class MySavable extends AbstractSavable{

        public MySavable(){
            register();
        } 
        
        @Override
        protected String findDisplayName() {
            return "Employee";
        }

        @Override
        protected void handleSave() throws IOException {
            
        }
        
        EmpDisengagementPanel pnel(){
            return EmpDisengagementPanel.this;
        }

        @Override
        public boolean equals(Object o) {
            if(o instanceof MySavable){
                MySavable m = (MySavable)o;
                return pnel() == m.pnel();
            }
            return false;
        }

        @Override
        public int hashCode() {
            return pnel().hashCode();
        }
        
    }
    
    void disableInput(){
        boolean shl = null != emp;
        Component[] comps = getComponents();
        for(Component c: comps){
            c.setEnabled(shl);
        }
    }
    
    
}
