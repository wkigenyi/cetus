/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package systems.tech247.pdreditors;

import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import javax.persistence.EntityManager;
import javax.persistence.Query;
import org.openide.awt.StatusDisplayer;
import systems.tech247.dbaccess.DataAccess;
import systems.tech247.hr.Countries;
import systems.tech247.hr.Locations;
import systems.tech247.pdr.Utility;


/**
 *
 * @author Admin
 */
public class PDRCountryEditor extends javax.swing.JPanel{

    
    
    DataAccess da = new DataAccess();
    Countries location;
    
    
    
    
    //Updatables
  
    String locationString = null;
    String locationCode = null;
    

    
   
  
    EntityManager entityManager = da.getEntityManager();
    
   
    /**
     * Creates new form PersonalInfoPanel
     */
    public PDRCountryEditor(){
        this(null);
    }
    
    
    
    
 public PDRCountryEditor(Countries location) {
        initComponents();
        //Start transaction
        this.location = location;
        
        if(location != null){
            jtCountry.setText(location.getCountryName());
            jtCode.setText(location.getCountryCode());
            
            
            
        }
        
        
        
        
        jtCountry.addKeyListener(new KeyListener() {
            @Override
            public void keyTyped(KeyEvent e) {
                locationString = jtCountry.getText();
            }

            @Override
            public void keyPressed(KeyEvent e) {
                locationString = jtCountry.getText();            
            }

            @Override
            public void keyReleased(KeyEvent e) {
                locationString = jtCountry.getText();
            }
        });
        
        jtCode.addKeyListener(new KeyListener() {
            @Override
            public void keyTyped(KeyEvent e) {
                locationCode = jtCode.getText();
            }

            @Override
            public void keyPressed(KeyEvent e) {
                locationCode = jtCode.getText();            
            }

            @Override
            public void keyReleased(KeyEvent e) {
                locationCode = jtCode.getText();
            }
        });
        
        jtCountry.addKeyListener(new KeyListener() {
            @Override
            public void keyTyped(KeyEvent e) {
              
            }

            @Override
            public void keyPressed(KeyEvent e) {
                         
            }

            @Override
            public void keyReleased(KeyEvent e) {
                
            }
        });
        
        
        
        
        
        
        
        
        
        
        
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jtCountry = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jtCode = new javax.swing.JTextField();
        jbSave = new javax.swing.JButton();

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(PDRCountryEditor.class, "PDRCountryEditor.jLabel1.text")); // NOI18N

        jtCountry.setText(org.openide.util.NbBundle.getMessage(PDRCountryEditor.class, "PDRCountryEditor.jtCountry.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(PDRCountryEditor.class, "PDRCountryEditor.jLabel2.text")); // NOI18N

        jtCode.setText(org.openide.util.NbBundle.getMessage(PDRCountryEditor.class, "PDRCountryEditor.jtCode.text")); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jtCountry, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtCode, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jtCode, jtCountry});

        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jtCountry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jtCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        org.openide.awt.Mnemonics.setLocalizedText(jbSave, org.openide.util.NbBundle.getMessage(PDRCountryEditor.class, "PDRCountryEditor.jbSave.text")); // NOI18N
        jbSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jbSave, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(jbSave)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jbSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSaveActionPerformed
        
        entityManager.getTransaction().begin();    
        
        if(location == null){ //Add New Country
            String insertSQL = "INSERT INTO [dbo].[Countries]\n" +
"           ([CountryCode]\n" +
"           ,[CountryName]\n" +
"           ,[Deleted])\n" +
"     VALUES\n" +
"           (?,?,?)";
            Query query = entityManager.createNativeQuery(insertSQL);
            query.setParameter(1, locationCode);
            query.setParameter(2, locationString);
            query.setParameter(3, false);
            
            
            
            
            
            query.executeUpdate();
            entityManager.getTransaction().commit(); 
            
            resetEditor();
            StatusDisplayer.getDefault().setStatusText("Country Added");
            String sqlString ="SELECT r from Countries r";
             Utility.loadCountry(sqlString);
        }else{
            
            Countries eba = entityManager.find(Countries.class, location.getCountryID());
            
            if(locationString != null){
                eba.setCountryName(locationString);
            }
            if(locationCode != null){
                eba.setCountryCode(locationCode);
            }
            
            
            
            
           
            
            
            
            entityManager.getTransaction().commit();
            String sqlString ="SELECT r from Countries r";
             Utility.loadCountry(sqlString);
            StatusDisplayer.getDefault().setStatusText("Country Saved");
            resetEditor();
        }
        

    }//GEN-LAST:event_jbSaveActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JButton jbSave;
    private javax.swing.JTextField jtCode;
    private javax.swing.JTextField jtCountry;
    // End of variables declaration//GEN-END:variables

    
    
    
    void modify(){
        
                jbSave.setEnabled(true);
            
        
    }

    
    
    
    
    
    void resetEditor(){
        jtCountry.setText("");
        locationString = null;
        jtCode.setText("");
        locationCode = null;
        jtCountry.setText("");
        
      
        
    }


    
    


}
