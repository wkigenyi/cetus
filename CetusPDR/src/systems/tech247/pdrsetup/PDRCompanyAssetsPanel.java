/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package systems.tech247.pdrsetup;

import java.awt.BorderLayout;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.io.IOException;
import javax.persistence.EntityManager;
import org.netbeans.spi.actions.AbstractSavable;
import org.openide.explorer.ExplorerManager;
import org.openide.explorer.view.OutlineView;
import org.openide.nodes.Node;
import org.openide.util.Lookup;
import org.openide.windows.TopComponent;
import org.openide.windows.WindowManager;
import systems.tech247.dbaccess.DataAccess;
import systems.tech247.hr.CompanyAssets;

import systems.tech247.pdr.QueryCompanyAssets;
import systems.tech247.pdr.Utility;

/**
 *
 * @author Admin
 */
public class PDRCompanyAssetsPanel extends javax.swing.JPanel implements ExplorerManager.Provider{
    
    ExplorerManager em = Utility.pdrCompanyAssets;
    CompanyAssets asset = null;
    
    DataAccess da = new DataAccess();
    
    QueryCompanyAssets query = new QueryCompanyAssets();
    String sqlString;
    String searchString;
    
    EntityManager entityManager = da.getEntityManager();
    
    
    /**
     * Creates new form PersonalInfoPanel
     */
    public PDRCompanyAssetsPanel() {
        initComponents();
        //Start transaction
        OutlineView ov = new OutlineView("Company Assets");
        ov.getOutline().setRootVisible(true);
        viewPanel.setLayout(new BorderLayout());
        viewPanel.add(ov);
        
        sqlString ="SELECT * from CompanyAssets r";
        Utility.loadCompanyAssets(sqlString);
        
        jTSearchAssets.addKeyListener(new KeyListener() {
            @Override
            public void keyTyped(KeyEvent e) {
                searchString = jTSearchAssets.getText();
               sqlString ="SELECT * FROM CompanyAssets r WHERE r.assetName LIKE '%"+searchString+"%'";
               Utility.loadCompanyAssets(sqlString);
               
            }

            @Override
            public void keyPressed(KeyEvent e) {
                 searchString = jTSearchAssets.getText();
               sqlString ="SELECT * FROM CompanyAssets r WHERE r.assetName LIKE '%"+searchString+"%'";
               Utility.loadCompanyAssets(sqlString);
            }

            @Override
            public void keyReleased(KeyEvent e) {
                 searchString = jTSearchAssets.getText();
               sqlString ="SELECT r FROM CompanyAssets r WHERE r.assetName LIKE '%"+searchString+"%'";
               Utility.loadCompanyAssets(sqlString);
            }
        });
        
        
        em.addPropertyChangeListener(new PropertyChangeListener() {
            @Override
            public void propertyChange(PropertyChangeEvent pce) {
                if(pce.getPropertyName().equals(ExplorerManager.PROP_SELECTED_NODES)){
                    Node [] selectedNodes = em.getSelectedNodes();
                    try{
                    Node nodeOfIntrest = selectedNodes[0];
                    asset = nodeOfIntrest.getLookup().lookup(CompanyAssets.class);
                    }catch(IndexOutOfBoundsException ex){
                        
                    }
                }
            }
        });
        
        
        
        
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        viewPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTSearchAssets = new javax.swing.JTextField();

        viewPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout viewPanelLayout = new javax.swing.GroupLayout(viewPanel);
        viewPanel.setLayout(viewPanelLayout);
        viewPanelLayout.setHorizontalGroup(
            viewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 354, Short.MAX_VALUE)
        );
        viewPanelLayout.setVerticalGroup(
            viewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 393, Short.MAX_VALUE)
        );

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(PDRCompanyAssetsPanel.class, "PDRCompanyAssetsPanel.jLabel1.text")); // NOI18N

        jTSearchAssets.setBackground(new java.awt.Color(51, 255, 255));
        jTSearchAssets.setText(org.openide.util.NbBundle.getMessage(PDRCompanyAssetsPanel.class, "PDRCompanyAssetsPanel.jTSearchAssets.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(viewPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTSearchAssets)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTSearchAssets, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(viewPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField jTSearchAssets;
    private javax.swing.JPanel viewPanel;
    // End of variables declaration//GEN-END:variables

      
    void modify(){
        if(getLookup().lookup(MySavable.class)==null){
            Utility.editorPDRIC.add(new MySavable());
        }
    }

    
    public Lookup getLookup() {
        TopComponent tc = WindowManager.getDefault().findTopComponent("EmployeeEditorTopComponent");
        return tc.getLookup();
    }

    @Override
    public ExplorerManager getExplorerManager() {
        return em;
    }
    
    private class MySavable extends AbstractSavable{

        public MySavable(){
            register();
        } 
        
        @Override
        protected String findDisplayName() {
            return "Employee";
        }

        @Override
        protected void handleSave() throws IOException {
            
        }
        
        PDRCompanyAssetsPanel pnel(){
            return PDRCompanyAssetsPanel.this;
        }

        @Override
        public boolean equals(Object o) {
            if(o instanceof MySavable){
                MySavable m = (MySavable)o;
                return pnel() == m.pnel();
            }
            return false;
        }

        @Override
        public int hashCode() {
            return pnel().hashCode();
        }
        
    }
    
    
    
    
    
    
    
    }

